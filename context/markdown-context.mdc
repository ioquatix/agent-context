---
globs: *.mdc
alwaysApply: false
---
# Creating `.mdc` (Markdown Context) Files

## What is an `.mdc` file?

An `.mdc` file is a Markdown file with optional YAML frontmatter, used to provide context, documentation, or metadata for Ruby gems. These files are intended to be machine- and human-readable, and are used by tools like `agent-context` to expose useful information to users and agents.

## Structure

### 1. YAML Frontmatter (Optional but Recommended)

Start your `.mdc` file with a YAML frontmatter block:

```yaml
---
description: Short summary of the file's purpose
globs: "test/**/*.rb,lib/**/*.rb"   # Optional: comma-separated file patterns
alwaysApply: false                  # Optional: should this context always be applied?
---
```

**Fields:**
- `description` (required): Short, human-readable summary.
- `globs` (optional): Comma-separated string of file patterns this context applies to.
- `alwaysApply` (optional): Whether to always apply this context (default: false).

### 2. Markdown Content

After the frontmatter, write your documentation in standard Markdown:

~~~markdown
# Title

## Section

- Bullet points
- More details

```ruby
# Code examples
```
~~~

## Best Practices

- **Start with a clear description** in the YAML frontmatter.
- **Use headings** (`#`, `##`) to organize content.
- **Keep each file focused** on a single topic.
- **Include code examples** where relevant.
- **Use lists** for options, steps, or best practices.
- **Be concise and actionable.**
- **Use tags and globs** to help agents and tools categorize and apply context.

## Example `.mdc` File

~~~markdown
---
description: How to configure the gem for production use.
globs: config/my_gem.rb
alwaysApply: false
---

# Production Configuration

To configure my_gem for production:

1. Set the environment variable:
   ```sh
   export GEM_ENV=production
   ```
2. Update your config file:
   ```ruby
   MyGem.configure do |config|
     config.mode = :production
   end
   ```
3. Restart your application.
~~~

## When to Use `.mdc` Files

- To provide documentation, guides, or metadata for your gem.
- To expose best practices, migration guides, or troubleshooting tips.
- To help AI agents and tools discover and apply context automatically.

## Further Reading
- [YAML Frontmatter Spec](https://jekyllrb.com/docs/front-matter/)
- [Markdown Guide](https://www.markdownguide.org/)
